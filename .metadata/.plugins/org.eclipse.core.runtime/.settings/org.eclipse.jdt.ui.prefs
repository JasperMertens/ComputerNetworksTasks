content_assist_proposals_background=255,255,255
content_assist_proposals_foreground=0,0,0
eclipse.preferences.version=1
fontPropagated=true
org.eclipse.jdt.internal.ui.navigator.layout=2
org.eclipse.jdt.ui.editor.tab.width=
org.eclipse.jdt.ui.formatterprofiles.version=12
org.eclipse.jdt.ui.javadoclocations.migrated=true
org.eclipse.jdt.ui.text.custom_templates=<?xml version\="1.0" encoding\="UTF-8" standalone\="no"?><templates><template autoinsert\="true" context\="java" deleted\="false" description\="Defensive, immutable instance property with instance checker." enabled\="true" name\="Def_Immut_InstCheck">/** TO BE ADDED TO CLASS HEADING\r\n * @invar  Each ${object_name} can have its ${property_name_Eng} as ${property_name_Eng}.\r\n *       | canHaveAs${PropertyName_Java}(this.get${PropertyName_Java}())\r\n */\r\n\r\n/**\r\n * Initialize this new ${object_name} with given ${property_name_Eng}.\r\n * \r\n * @param  ${propertyName_Java}\r\n *         The ${property_name_Eng} for this new ${object_name}.\r\n * @post   The ${property_name_Eng} of this new ${object_name} is equal to the given\r\n *         ${property_name_Eng}.\r\n *       | new.get${PropertyName_Java}() \=\= ${propertyName_Java}\r\n * @throws ${ExceptionName_Java}\r\n *         This new ${object_name} cannot have the given ${property_name_Eng} as its ${property_name_Eng}.\r\n *       | \! canHaveAs${PropertyName_Java}(this.get${PropertyName_Java}())\r\n */\r\npublic ${enclosing_type}(${property_type} ${propertyName_Java}) throws ${ExceptionName_Java} {\r\n  if (\! canHaveAs${PropertyName_Java}(${propertyName_Java}))\r\n    throw new ${ExceptionName_Java}();\r\n  this.${propertyName_Java} \= ${propertyName_Java};\r\n}\r\n\r\n/**\r\n * Return the ${property_name_Eng} of this ${object_name}.\r\n */\r\n@Basic @Raw @Immutable\r\npublic ${property_type} get${PropertyName_Java}() {\r\n  return this.${propertyName_Java};\r\n}\r\n\r\n/**\r\n * Check whether this ${object_name} can have the given ${property_name_Eng} as its ${property_name_Eng}.\r\n *  \r\n * @param  ${propertyName_Java}\r\n *         The ${property_name_Eng} to check.\r\n * @return \r\n *       | result \=\= ${cursor}\r\n */\r\n@Raw\r\npublic boolean canHaveAs${PropertyName_Java}(${property_type} ${propertyName_Java}) {\r\n  return false;\r\n}\r\n\r\n/**\r\n * Variable registering the ${property_name_Eng} of this ${object_name}.\r\n */\r\nprivate final ${property_type} ${propertyName_Java};</template><template autoinsert\="true" context\="java" deleted\="false" description\="Defensive, mutable instance property with static checker" enabled\="true" name\="Def_Mut_StatCheck">/** TO BE ADDED TO CLASS HEADING\r\n * @invar  The ${property_name_Eng} of each ${object_name_Eng} must be a valid ${property_name_Eng} for any\r\n *         ${object_name_Eng}.\r\n *       | isValid${PropertyName_Java}(get${PropertyName_Java}())\r\n */\r\n\r\n\r\n/**\r\n * Initialize this new ${object_name_Eng} with given ${property_name_Eng}.\r\n *\r\n * @param  ${propertyName_Java}\r\n *         The ${property_name_Eng} for this new ${object_name_Eng}.\r\n * @effect The ${property_name_Eng} of this new ${object_name_Eng} is set to\r\n *         the given ${property_name_Eng}.\r\n *       | this.set${PropertyName_Java}(${propertyName_Java})\r\n */\r\npublic ${enclosing_type}(${property_type_Java} ${propertyName_Java})\r\n          throws ${ExceptionName_Java} {\r\n  this.set${PropertyName_Java}(${propertyName_Java});\r\n}\r\n\r\n\r\n/**\r\n * Return the ${property_name_Eng} of this ${object_name_Eng}.\r\n */\r\n@Basic @Raw\r\npublic ${property_type_Java} get${PropertyName_Java}() {\r\n  return this.${propertyName_Java};\r\n}\r\n\r\n/**\r\n * Check whether the given ${property_name_Eng} is a valid ${property_name_Eng} for\r\n * any ${object_name_Eng}.\r\n *  \r\n * @param  ${property_name_Eng}\r\n *         The ${property_name_Eng} to check.\r\n * @return \r\n *       | result \=\= ${cursor}\r\n */\r\npublic static boolean isValid${PropertyName_Java}(${property_type_Java} ${propertyName_Java}) {\r\n  return false;\r\n}\r\n\r\n/**\r\n * Set the ${property_name_Eng} of this ${object_name_Eng} to the given ${property_name_Eng}.\r\n * \r\n * @param  ${propertyName_Java}\r\n *         The new ${property_name_Eng} for this ${object_name_Eng}.\r\n * @post   The ${property_name_Eng} of this new ${object_name_Eng} is equal to\r\n *         the given ${property_name_Eng}.\r\n *       | new.get${PropertyName_Java}() \=\= ${propertyName_Java}\r\n * @throws ${ExceptionName_Java}\r\n *         The given ${property_name_Eng} is not a valid ${property_name_Eng} for any\r\n *         ${object_name_Eng}.\r\n *       | \! isValid${PropertyName_Java}(get${PropertyName_Java}())\r\n */\r\n@Raw\r\npublic void set${PropertyName_Java}(${property_type_Java} ${propertyName_Java}) \r\n      throws ${ExceptionName_Java} {\r\n  if (\! isValid${PropertyName_Java}(${propertyName_Java}))\r\n    throw new ${ExceptionName_Java}();\r\n  this.${propertyName_Java} \= ${propertyName_Java};\r\n}\r\n\r\n/**\r\n * Variable registering the ${property_name_Eng} of this ${object_name_Eng}.\r\n */\r\nprivate ${property_type} ${propertyName_Java};</template><template autoinsert\="true" context\="java" deleted\="false" description\="Nominal, immutable property with instance checker." enabled\="true" name\="Nom_Immut_InstCheck">/**\r\n * @invar  Each ${object_name} can have its ${property_name_Eng} as ${property_name_Eng}.\r\n *       | canHaveAs${PropertyName_Java}(this.get${PropertyName_Java}())\r\n */\r\n\r\n/**\r\n * Initialize this new ${object_name} with given ${property_name_Eng}.\r\n * \r\n * @param  ${propertyName_Java}\r\n *         The ${property_name_Eng} for this new ${object_name}.\r\n * @pre    This new ${object_name} can have the given ${property_name_Eng} as its ${property_name_Eng}.\r\n *       | canHaveAs${PropertyName_Java}(${propertyName_Java})\r\n * @post   The ${property_name_Eng} of this new ${object_name} is equal to the given\r\n *         ${property_name_Eng}.\r\n *       | new.get${PropertyName_Java}() \=\= ${propertyName_Java}\r\n */\r\npublic ${enclosing_type}(${property_type} ${propertyName_Java}) {\r\n  assert this.canHaveAs${PropertyName_Java}(${propertyName_Java});\r\n  this.${propertyName_Java} \= ${propertyName_Java};\r\n}\r\n\r\n/**\r\n * Return the ${property_name_Eng} of this ${object_name}.\r\n */\r\n@Basic @Raw @Immutable\r\npublic ${property_type} get${PropertyName_Java}() {\r\n  return this.${propertyName_Java};\r\n}\r\n\r\n/**\r\n * Check whether this ${object_name} can have the given ${property_name_Eng} as its ${property_name_Eng}.\r\n *  \r\n * @param  ${propertyName_Java}\r\n *         The ${property_name_Eng} to check.\r\n * @return \r\n *       | result \=\= ${cursor}\r\n */\r\n@Raw\r\npublic boolean canHaveAs${PropertyName_Java}(${property_type} ${propertyName_Java}) {\r\n  return false;\r\n}\r\n\r\n/**\r\n * Variable registering the ${property_name_Eng} of this ${object_name}.\r\n */\r\nprivate final ${property_type} ${propertyName_Java};</template><template autoinsert\="true" context\="java" deleted\="false" description\="Nominal, mutable property with static checker." enabled\="true" name\="Nom_Mut_StatCheck">/**\r\n * @invar  The ${property_name_Eng} of each ${object_name} must be a valid ${property_name_Eng} for any\r\n *         ${object_name}.\r\n *       | isValid${PropertyName_Java}(get${PropertyName_Java}())\r\n */\r\n\r\n/**\r\n * Initialize this new ${object_name} with given ${property_name_Eng}.\r\n * \r\n * @param  ${propertyName_Java}\r\n *         The ${property_name_Eng} for this new ${object_name}.\r\n * @pre    The given ${property_name_Eng} must be a valid ${property_name_Eng} for any ${object_name}.\r\n *       | isValid${PropertyName_Java}(${property_name_Eng})\r\n * @post   The ${property_name_Eng} of this new ${object_name} is equal to the given\r\n *         ${property_name_Eng}.\r\n *       | new.get${PropertyName_Java}() \=\= ${propertyName_Java}\r\n */\r\npublic ${enclosing_type}(${property_type} ${propertyName_Java}) {\r\n  this.set${PropertyName_Java}(${propertyName_Java});\r\n}\r\n\r\n/**\r\n * Return the ${property_name_Eng} of this ${object_name}.\r\n */\r\n@Basic @Raw\r\npublic ${property_type} get${PropertyName_Java}() {\r\n  return this.${propertyName_Java};\r\n}\r\n\r\n/**\r\n * Check whether the given ${property_name_Eng} is a valid ${property_name_Eng} for\r\n * any ${object_name}.\r\n *  \r\n * @param  ${property_name_Eng}\r\n *         The ${property_name_Eng} to check.\r\n * @return \r\n *       | result \=\= ${cursor}\r\n */\r\npublic static boolean isValid${PropertyName_Java}(${property_type} ${propertyName_Java}) {\r\n  return false;\r\n}\r\n\r\n/**\r\n * Set the ${property_name_Eng} of this ${object_name} to the given ${property_name_Eng}.\r\n * \r\n * @param  ${propertyName_Java}\r\n *         The new ${property_name_Eng} for this ${object_name}.\r\n * @pre    The given ${property_name_Eng} must be a valid ${property_name_Eng} for any\r\n *         ${object_name}.\r\n *       | isValid${PropertyName_Java}(${propertyName_Java})\r\n * @post   The ${property_name_Eng} of this ${object_name} is equal to the given\r\n *         ${property_name_Eng}.\r\n *       | new.get${PropertyName_Java}() \=\= ${propertyName_Java}\r\n */\r\n@Raw\r\npublic void set${PropertyName_Java}(${property_type} ${propertyName_Java}) {\r\n  assert isValid${PropertyName_Java}(${propertyName_Java});\r\n  this.${propertyName_Java} \= ${propertyName_Java};\r\n}\r\n\r\n/**\r\n * Variable registering the ${property_name_Eng} of this ${object_name}.\r\n */\r\nprivate ${property_type} ${propertyName_Java};</template><template autoinsert\="true" context\="java" deleted\="false" description\="Total, immutable property with instance checker" enabled\="true" name\="Tot_Immut_InstCheck">/**\r\n * @invar  Each ${object_name} can have its ${property_name_Eng} as ${property_name_Eng} .\r\n *       | canHaveAs${PropertyName_Java}(this.get${PropertyName_Java}())\r\n */\r\n\r\n/**\r\n * Initialize this new ${object_name} with given ${property_name_Eng}.\r\n * \r\n * @param  ${propertyName_Java}\r\n *         The ${property_name_Eng} for this new ${object_name}.\r\n * @post   If the given ${property_name_Eng} is a valid ${property_name_Eng} for any ${object_name},\r\n *         the ${property_name_Eng} of this new ${object_name} is equal to the given\r\n *         ${property_name_Eng}. Otherwise, the ${property_name_Eng} of this new ${object_name} is equal\r\n *         to ${default_value_Java}.\r\n *       | if (isValid${PropertyName_Java}(${propertyName_Java}))\r\n *       |   then new.get${PropertyName_Java}() \=\= ${propertyName_Java}\r\n *       |   else new.get${PropertyName_Java}() \=\= ${default_value_Java}\r\n */\r\npublic ${enclosing_type}(${property_type} ${propertyName_Java}) {\r\n  if (\! canHaveAs${PropertyName_Java}(${propertyName_Java}))\r\n    ${propertyName_Java} \= ${default_value_Java};\r\n  this.${propertyName_Java} \= ${propertyName_Java};\r\n}\r\n\r\n/**\r\n * Return the ${property_name_Eng} of this ${object_name}.\r\n */\r\n@Basic @Raw @Immutable\r\npublic ${property_type} get${PropertyName_Java}() {\r\n  return this.${propertyName_Java};\r\n}\r\n\r\n/**\r\n * Check whether this ${object_name} can have the given ${property_name_Eng} as its ${property_name_Eng}.\r\n *  \r\n * @param  ${propertyName_Java}\r\n *         The ${property_name_Eng} to check.\r\n * @return \r\n *       | result \=\= ${cursor}\r\n */\r\n@Raw\r\npublic boolean canHaveAs${PropertyName_Java}(${property_type} ${propertyName_Java}) {\r\n  return false;\r\n}\r\n\r\n/**\r\n * Variable registering the ${property_name_Eng} of this ${object_name}.\r\n */\r\nprivate final ${property_type} ${propertyName_Java};\r\n</template><template autoinsert\="true" context\="java" deleted\="false" description\="Total, mutable property with static checker." enabled\="true" name\="Tot_Mut_StatCheck">/**\r\n * @invar  The ${property_name_Eng} of each ${object_name} must be a valid ${property_name_Eng} for any\r\n *         ${object_name}.\r\n *       | isValid${PropertyName_Java}(get${PropertyName_Java}())\r\n */\r\n\r\n/**\r\n * Initialize this new ${object_name} with given ${property_name_Eng}.\r\n * \r\n * @param  ${propertyName_Java}\r\n *         The ${property_name_Eng} for this new ${object_name}.\r\n * @post   If the given ${property_name_Eng} is a valid ${property_name_Eng} for any ${object_name},\r\n *         the ${property_name_Eng} of this new ${object_name} is equal to the given\r\n *         ${property_name_Eng}. Otherwise, the ${property_name_Eng} of this new ${object_name} is equal\r\n *         to ${default_value_Java}.\r\n *       | if (isValid${PropertyName_Java}(${propertyName_Java}))\r\n *       |   then new.get${PropertyName_Java}() \=\= ${propertyName_Java}\r\n *       |   else new.get${PropertyName_Java}() \=\= ${default_value_Java}\r\n */\r\npublic ${enclosing_type}(${property_type} ${propertyName_Java}) {\r\n  if (\! isValid${PropertyName_Java}(${propertyName_Java}))\r\n    ${propertyName_Java} \= ${default_value_Java};\r\n  set${PropertyName_Java}(${propertyName_Java});\r\n}\r\n\r\n/**\r\n * Return the ${property_name_Eng} of this ${object_name}.\r\n */\r\n@Basic @Raw\r\npublic ${property_type} get${PropertyName_Java}() {\r\n  return this.${propertyName_Java};\r\n}\r\n\r\n/**\r\n * Check whether the given ${property_name_Eng} is a valid ${property_name_Eng} for\r\n * any ${object_name}.\r\n *  \r\n * @param  ${propertyName_Java}\r\n *         The ${property_name_Eng} to check.\r\n * @return \r\n *       | result \=\= ${cursor}\r\n */\r\npublic static boolean isValid${PropertyName_Java}(${property_type} ${propertyName_Java}) {\r\n  return false;\r\n}\r\n\r\n/**\r\n * Set the ${property_name_Eng} of this ${object_name} to the given ${property_name_Eng}.\r\n * \r\n * @param  ${propertyName_Java}\r\n *         The new ${property_name_Eng} for this ${object_name}.\r\n * @post   If the given ${property_name_Eng} is a valid ${property_name_Eng} for any ${object_name},\r\n *         the ${property_name_Eng} of this new ${object_name} is equal to the given\r\n *         ${property_name_Eng}.\r\n *       | if (isValid${PropertyName_Java}(${propertyName_Java}))\r\n *       |   then new.get${PropertyName_Java}() \=\= ${propertyName_Java}\r\n */\r\n@Raw\r\npublic void set${PropertyName_Java}(${property_type} ${propertyName_Java}) {\r\n  if (isValid${PropertyName_Java}(${propertyName_Java}))\r\n    this.${propertyName_Java} \= ${propertyName_Java};\r\n}\r\n\r\n/**\r\n * Variable registering the ${property_name_Eng} of this ${object_name}.\r\n */\r\nprivate ${property_type} ${propertyName_Java};\r\n</template></templates>
org.eclipse.jface.textfont=1|Courier New|10.0|0|WINDOWS|1|0|0|0|0|0|0|0|0|1|0|0|0|0|Courier New;
proposalOrderMigrated=true
spelling_locale_initialized=true
tabWidthPropagated=true
useAnnotationsPrefPage=true
useQuickDiffPrefPage=true
